@{
    Layout = "Admin_Layout";  // Specifies the layout to use
    ViewData["Title"] = "Home Page";
}

<body class="position-relative bg-image" style="font-family: 'Poppins', sans-serif; overflow-x: hidden; height: 100vh; width: 100vw; margin: 0;">
    <!-- Background Image -->
    <img src="~/images/bgjr.png"
         alt="Decorative background representing Grade 7"
         class="img-fluid w-100"
         style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; object-fit: cover; z-index: -1;">

    <!-- Main Content -->
    <div style="background-color: rgba(220, 232, 253, 0.9); padding: 20px; border-radius: 10px;">
        <section class="fixed ml-72 px-11 py-6 w-full top-20 left-0" style="font-weight: bold;">
            <div class="d-flex align-items-center">
                <!-- Icon and Link -->
                <p class="text-sm text-black fs-5 mb-0 me-auto">
                    <i class="fas fa-user text-black"></i>
                    <a asp-controller="AdminPortal" asp-action="Faculty" class="text-black ms-2" style="text-decoration: none;">Faculty</a>
                </p>

                <!-- Button -->
                <button type="button" class="btn btn-primary ms-auto" data-bs-toggle="modal" data-bs-target="#addFacultyModal" id="addBtn">
                    <i class="fas fa-plus-circle"></i> Add Faculty
                </button>
            </div>
        </section>

        <!-- Table -->
        <table class="table mt-4">
            <thead class="table-secondary text-white">
                <tr>
                    <th>Faculty Name</th>
                    <th>Position</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>John Smith</td>
                    <td>Professor</td>
                    <td>Inactive</td>
                    <td>
                        <div class="dropdown">
                            <button class="btn btn-link p-0" type="button" id="actionMenu" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="fas fa-ellipsis" style="margin-left: 20px;"></i>
                            </button>
                            <ul class="dropdown-menu" aria-labelledby="actionMenu">
                                <li>
                                    <a class="dropdown-item btn-outline-info fw-bold" data-bs-toggle="modal" data-bs-target="#viewFacultyModal">
                                        View
                                    </a>
                                </li>
                                <li>
                                    <a class="dropdown-item btn-outline-warning fw-bold" data-bs-toggle="modal" data-bs-target="#editFacultyModal">
                                        Edit
                                    </a>
                                </li>
                                <li>
                                    <a class="dropdown-item btn-outline-danger fw-bold" data-bs-toggle="modal" data-bs-target="#deleteFacultyModal">
                                        Delete
                                    </a>
                                </li>
                            </ul>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    <!-- View Faculty Modal -->
    <div class="modal fade" id="viewFacultyModal" tabindex="-1" aria-labelledby="viewFacultyModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="viewFacultyModalLabel">View Faculty</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="row mb-3">
                            <div class="col-md-4">
                                <label for="viewFacultyName" class="form-label">Faculty Name</label>
                                <input type="text" class="form-control" id="viewFacultyName" placeholder="Enter name" disabled>
                            </div>
                            <div class="col-md-4">
                                <label for="viewEmail" class="form-label">Email</label>
                                <input type="email" class="form-control" id="viewEmail" placeholder="Enter email" disabled>
                            </div>
                            <div class="col-md-4">
                                <label for="viewContactNumber" class="form-label">Contact Number</label>
                                <input type="tel" class="form-control" id="viewContactNumber" placeholder="Enter contact number" disabled>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-4">
                                <label for="viewStatus" class="form-label">Status</label>
                                <select class="form-select" id="viewStatus" disabled>
                                    <option>Inactive</option>
                                    <option>Active</option>
                                </select>
                            </div>
                            <div class="col-md-4">
                                <label for="viewDob" class="form-label">Date of Birth</label>
                                <input type="date" class="form-control" id="viewDob" disabled>
                            </div>
                            <div class="col-md-4">
                                <label for="viewGender" class="form-label">Gender</label>
                                <select class="form-select" id="viewGender" disabled>
                                    <option>Male</option>
                                    <option>Female</option>
                                </select>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="viewAddress" class="form-label">Address</label>
                                <input type="text" class="form-control" id="viewAddress" placeholder="Enter address" disabled>
                            </div>
                            <div class="col-md-6">
                                <label for="viewHireDate" class="form-label">Date of Hire</label>
                                <input type="date" class="form-control" id="viewHireDate" disabled>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Faculty Modal -->
    <div class="modal fade" id="editFacultyModal" tabindex="-1" aria-labelledby="editFacultyModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editFacultyModalLabel">Edit Faculty</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="row mb-3">
                            <div class="col-md-4">
                                <label for="facultyName" class="form-label">Faculty Name</label>
                                <input type="text" class="form-control" id="facultyName" value="John Smith" required>
                            </div>
                            <div class="col-md-4">
                                <label for="email" class="form-label">Email</label>
                                <input type="email" class="form-control" id="email" value="john.smith@example.com" required>
                            </div>
                            <div class="col-md-4">
                                <label for="contactNumber" class="form-label">Contact Number</label>
                                <input type="tel" class="form-control" id="contactNumber" value="+1234567890" required>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-4">
                                <label for="status" class="form-label">Status</label>
                                <select class="form-select" id="status" required>
                                    <option selected>Inactive</option>
                                    <option>Active</option>
                                </select>
                            </div>
                            <div class="col-md-4">
                                <label for="dob" class="form-label">Date of Birth</label>
                                <input type="date" class="form-control" id="dob" value="1985-06-15" required>
                            </div>
                            <div class="col-md-4">
                                <label for="gender" class="form-label">Gender</label>
                                <select class="form-select" id="gender" required>
                                    <option selected>Male</option>
                                    <option>Female</option>
                                </select>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="address" class="form-label">Address</label>
                                <input type="text" class="form-control" id="address" value="123 Main St, City" required>
                            </div>
                            <div class="col-md-6">
                                <label for="hireDate" class="form-label">Date of Hire</label>
                                <input type="date" class="form-control" id="hireDate" value="2010-09-01" required>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary">Save changes</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Add Faculty Modal -->
    <div class="modal fade" id="addFacultyModal" tabindex="-1" aria-labelledby="addFacultyModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addFacultyModalLabel">Add Faculty</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="addFacultyForm">
                        <div class="row mb-3">
                            <div class="col-md-4">
                                <label for="facultyName" class="form-label">Faculty Name</label>
                                <input type="text" class="form-control" id="facultyName" name="facultyName" placeholder="Enter name" required>
                            </div>
                            <div class="col-md-4">
                                <label for="email" class="form-label">Email</label>
                                <input type="email" class="form-control" id="email" name="email" placeholder="Enter email" required>
                            </div>
                            <div class="col-md-4">
                                <label for="contactNumber" class="form-label">Contact Number</label>
                                <input type="tel" class="form-control" id="contactNumber" name="contactNumber" placeholder="Enter contact number" required>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-3">
                                <label for="status" class="form-label">Status</label>
                                <select class="form-select" id="status" name="status" required>
                                    <option value="Inactive">Inactive</option>
                                    <option value="Active">Active</option>
                                </select>
                            </div>
                            <div class="col-md-3">
                                <label for="dob" class="form-label">Date of Birth</label>
                                <input type="date" class="form-control" id="dob" name="dateOfBirth" required>
                            </div>
                            <div class="col-md-3">
                                <label for="gender" class="form-label">Gender</label>
                                <select class="form-select" id="gender" name="gender" required>
                                    <option value="Male">Male</option>
                                    <option value="Female">Female</option>
                                </select>
                            </div>
                            <div class="col-md-3">
                                <label for="position" class="form-label">Position</label>
                                <input type="text" class="form-control" id="position" name="position" placeholder="Enter position" required>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="address" class="form-label">Address</label>
                                <input type="text" class="form-control" id="address" name="address" placeholder="Enter address" required>
                            </div>
                            <div class="col-md-6">
                                <label for="hireDate" class="form-label">Date of Hire</label>
                                <input type="date" class="form-control" id="hireDate" name="dateOfHire" required>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary" form="addFacultyForm">Save</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Delete Faculty Modal -->
    <div class="modal fade" id="deleteFacultyModal" tabindex="-1" aria-labelledby="deleteFacultyModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteFacultyModalLabel">Delete Faculty</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete <strong>John Smith</strong> from the faculty list?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger">Delete</button>
                </div>
            </div>
        </div>
    </div>
      

    <!-- JavaScript for handling dropdown -->
    <script>
        // Function to select/deselect all checkboxes
        function selectAllCheckboxes(source) {
            const checkboxes = document.querySelectorAll('.studentCheckbox');
            checkboxes.forEach(checkbox => checkbox.checked = source.checked);
        }

         const deleteBtn = document.getElementById('deleteBtn');
         if (deleteBtn) {
            deleteBtn.addEventListener('click', function(event) {
                event.stopPropagation(); // Prevent row click from being triggered
            });
        }

            document.addEventListener('DOMContentLoaded', function() {
            // Function to load and display all faculty members
            async function loadFacultyData() {
                try {
                    const response = await fetch('/api/Faculty');
                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    const faculties = await response.json();

                    // Get the table body and clear existing rows
                    const tableBody = document.querySelector('tbody');
                    tableBody.innerHTML = '';

                    // Add each faculty member to the table
                    faculties.forEach(faculty => {
                        const row = `
                            <tr>
                                <td>${faculty.facultyName}</td>
                                <td>${faculty.position}</td>
                                <td>${faculty.status}</td>
                                <td>
                                    <div class="dropdown">
                                        <button class="btn btn-link p-0" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                            <i class="fas fa-ellipsis" style="margin-left: 20px;"></i>
                                        </button>
                                        <ul class="dropdown-menu">
                                            <li>
                                                <a class="dropdown-item btn-outline-info fw-bold" onclick="viewFaculty(${faculty.id})">
                                                    View
                                                </a>
                                            </li>
                                            <li>
                                                <a class="dropdown-item btn-outline-warning fw-bold" onclick="editFaculty(${faculty.id})">
                                                    Edit
                                                </a>
                                            </li>
                                            <li>
                                                <a class="dropdown-item btn-outline-danger fw-bold" onclick="deleteFaculty(${faculty.id})">
                                                    Delete
                                                </a>
                                            </li>
                                        </ul>
                                    </div>
                                </td>
                            </tr>
                        `;
                        tableBody.insertAdjacentHTML('beforeend', row);
                    });
                } catch (error) {
                    console.error('Error loading faculty data:', error);
                    alert('Error loading faculty data. Please try again.');
                }
            }

            // Function to handle viewing faculty details
            window.viewFaculty = async function(id) {
                try {
                    const response = await fetch(`/api/Faculty/${id}`);
                    if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
                    const faculty = await response.json();

                    // Populate the view modal with faculty data
                    document.getElementById('viewFacultyName').value = faculty.facultyName;
                    document.getElementById('viewEmail').value = faculty.email;
                    document.getElementById('viewContactNumber').value = faculty.contactNumber;
                    document.getElementById('viewStatus').value = faculty.status;
                    document.getElementById('viewDob').value = faculty.dateOfBirth.split('T')[0];
                    document.getElementById('viewGender').value = faculty.gender;
                    document.getElementById('viewAddress').value = faculty.address;
                    document.getElementById('viewHireDate').value = faculty.dateOfHire.split('T')[0];

                    // Show the view modal
                    const viewModal = new bootstrap.Modal(document.getElementById('viewFacultyModal'));
                    viewModal.show();
                } catch (error) {
                    console.error('Error fetching faculty details:', error);
                    alert('Error loading faculty details. Please try again.');
                }
            };

            // Function to handle editing faculty
            window.editFaculty = async function(id) {
                try {
                    const response = await fetch(`/api/Faculty/${id}`);
                    if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
                    const faculty = await response.json();

                    // Store the faculty ID for the update operation
                    document.getElementById('editFacultyModal').dataset.facultyId = id;

                    // Populate the edit modal with faculty data
                    document.querySelector('#editFacultyModal #facultyName').value = faculty.facultyName;
                    document.querySelector('#editFacultyModal #email').value = faculty.email;
                    document.querySelector('#editFacultyModal #contactNumber').value = faculty.contactNumber;
                    document.querySelector('#editFacultyModal #status').value = faculty.status;
                    document.querySelector('#editFacultyModal #dob').value = faculty.dateOfBirth.split('T')[0];
                    document.querySelector('#editFacultyModal #gender').value = faculty.gender;
                    document.querySelector('#editFacultyModal #address').value = faculty.address;
                    document.querySelector('#editFacultyModal #hireDate').value = faculty.dateOfHire.split('T')[0];

                    // Show the edit modal
                    const editModal = new bootstrap.Modal(document.getElementById('editFacultyModal'));
                    editModal.show();
                } catch (error) {
                    console.error('Error fetching faculty details:', error);
                    alert('Error loading faculty details. Please try again.');
                }
            };

            // Function to handle deleting faculty
            window.deleteFaculty = async function(id) {
                try {
                    const response = await fetch(`/api/Faculty/${id}`);
                    if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
                    const faculty = await response.json();

                    // Store the faculty ID for the delete operation
                    document.getElementById('deleteFacultyModal').dataset.facultyId = id;

                    // Update the confirmation message
                    document.querySelector('#deleteFacultyModal .modal-body p strong').textContent = faculty.facultyName;

                    // Show the delete modal
                    const deleteModal = new bootstrap.Modal(document.getElementById('deleteFacultyModal'));
                    deleteModal.show();
                } catch (error) {
                    console.error('Error fetching faculty details:', error);
                    alert('Error loading faculty details. Please try again.');
                }
            };

            // Handle Add Faculty form submission
            const addFacultyForm = document.getElementById('addFacultyForm');
            addFacultyForm.addEventListener('submit', async (e) => {
                e.preventDefault();

                const formData = new FormData(addFacultyForm);
                const jsonData = {};

                formData.forEach((value, key) => {
                    // Convert date strings to proper format
                    if (key === 'dateOfBirth' || key === 'dateOfHire') {
                        jsonData[key] = new Date(value).toISOString();
                    } else {
                        jsonData[key] = value;
                    }
                });

                try {
                    const response = await fetch('/api/Faculty', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(jsonData)
                    });

                    if (!response.ok) {
                        const errorData = await response.json();
                        throw new Error(errorData.message || `HTTP error! status: ${response.status}`);
                    }

                    await response.json();
                    alert('Faculty member saved successfully!');

                    // Close the modal
                    const modal = bootstrap.Modal.getInstance(document.getElementById('addFacultyModal'));
                    modal.hide();

                    // Refresh the faculty data
                    await loadFacultyData();

                    // Reset the form
                    addFacultyForm.reset();
                } catch (error) {
                    console.error('Error:', error);
                    alert('Failed to save faculty member: ' + error.message);
                }
            });

            // Handle Edit Faculty form submission
            document.querySelector('#editFacultyModal .btn-primary').addEventListener('click', async function() {
                const id = document.getElementById('editFacultyModal').dataset.facultyId;
                const jsonData = {
                    id: parseInt(id),
                    facultyName: document.querySelector('#editFacultyModal #facultyName').value,
                    email: document.querySelector('#editFacultyModal #email').value,
                    contactNumber: document.querySelector('#editFacultyModal #contactNumber').value,
                    status: document.querySelector('#editFacultyModal #status').value,
                    dateOfBirth: new Date(document.querySelector('#editFacultyModal #dob').value).toISOString(),
                    gender: document.querySelector('#editFacultyModal #gender').value,
                    address: document.querySelector('#editFacultyModal #address').value,
                    dateOfHire: new Date(document.querySelector('#editFacultyModal #hireDate').value).toISOString(),
                    position: document.querySelector('#editFacultyModal #position').value
                };

                try {
                    const response = await fetch(`/api/Faculty/${id}`, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(jsonData)
                    });

                    if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);

                    alert('Faculty member updated successfully!');

                    // Close the modal
                    const modal = bootstrap.Modal.getInstance(document.getElementById('editFacultyModal'));
                    modal.hide();

                    // Refresh the faculty data
                    await loadFacultyData();
                } catch (error) {
                    console.error('Error:', error);
                    alert('Failed to update faculty member: ' + error.message);
                }
            });

            // Handle Delete Faculty confirmation
            document.querySelector('#deleteFacultyModal .btn-danger').addEventListener('click', async function() {
                const id = document.getElementById('deleteFacultyModal').dataset.facultyId;

                try {
                    const response = await fetch(`/api/Faculty/${id}`, {
                        method: 'DELETE'
                    });

                    if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);

                    alert('Faculty member deleted successfully!');

                    // Close the modal
                    const modal = bootstrap.Modal.getInstance(document.getElementById('deleteFacultyModal'));
                    modal.hide();

                    // Refresh the faculty data
                    await loadFacultyData();
                } catch (error) {
                    console.error('Error:', error);
                    alert('Failed to delete faculty member: ' + error.message);
                }
            });

            // Load faculty data when the page loads
            loadFacultyData();
        });
    </script>
</body>

