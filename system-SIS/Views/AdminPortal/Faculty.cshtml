@{
    Layout = "Admin_Layout";
    ViewData["Title"] = "Home Page";
}

<body class="position-relative bg-image" style="font-family: 'Poppins', sans-serif; overflow-x: hidden; height: 100vh; width: 100vw; margin: 0;">
    <!-- Background Image -->
    <img src="~/images/bgjr.png"
         alt="Decorative background representing Grade 7"
         class="img-fluid w-100"
         style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; object-fit: cover; z-index: -1;">

    <!-- Main Content -->
    <div style="background-color: rgba(220, 232, 253, 0.9); padding: 20px; border-radius: 10px;">
        <section class="fixed ml-72 px-11 py-6 w-full top-20 left-0" style="font-weight: bold;">
            <div class="d-flex align-items-center">
                <!-- Icon and Link -->
                <p class="text-sm text-black fs-5 mb-0 me-auto">
                    <i class="fas fa-user text-black"></i>
                    <a asp-controller="AdminPortal" asp-action="Faculty" class="text-black ms-2" style="text-decoration: none;">Faculty</a>
                </p>

                <!-- Add Faculty Button -->
                <button type="button" class="btn btn-primary ms-auto" data-bs-toggle="modal" data-bs-target="#addFacultyModal" id="addBtn">
                    <i class="fas fa-plus-circle"></i> Add Faculty
                </button>
            </div>
        </section>

        <!-- Faculty Table -->
        <table class="table mt-4">
            <thead class="table-secondary text-white">
                <tr>
                    <th>Faculty Name</th>
                    <th>Position</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                <!-- Table content will be dynamically populated by JavaScript -->
            </tbody>
        </table>
    </div>

    <!-- Add Faculty Modal -->
    <div class="modal fade" id="addFacultyModal" tabindex="-1" aria-labelledby="addFacultyModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add Faculty</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="addFacultyForm">
                        <div class="row mb-3">
                            <div class="col-md-4">
                                <label for="facultyName" class="form-label">Faculty Name</label>
                                <input type="text" class="form-control" id="facultyName" name="facultyName" required>
                            </div>
                            <div class="col-md-4">
                                <label for="email" class="form-label">Email</label>
                                <input type="email" class="form-control" id="email" name="email" required>
                            </div>
                            <div class="col-md-4">
                                <label for="contactNumber" class="form-label">Contact Number</label>
                                <input type="tel" class="form-control" id="contactNumber" name="contactNumber" required>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-3">
                                <label for="status" class="form-label">Status</label>
                                <select class="form-select" id="status" name="status" required>
                                    <option value="Active">Active</option>
                                    <option value="Inactive">Inactive</option>
                                </select>
                            </div>
                            <div class="col-md-3">
                                <label for="dob" class="form-label">Date of Birth</label>
                                <input type="date" class="form-control" id="dob" name="dateOfBirth" required>
                            </div>
                            <div class="col-md-3">
                                <label for="gender" class="form-label">Gender</label>
                                <select class="form-select" id="gender" name="gender" required>
                                    <option value="Male">Male</option>
                                    <option value="Female">Female</option>
                                </select>
                            </div>
                            <div class="col-md-3">
                                <label for="position" class="form-label">Position</label>
                                <input type="text" class="form-control" id="position" name="position" required>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="address" class="form-label">Address</label>
                                <input type="text" class="form-control" id="address" name="address" required>
                            </div>
                            <div class="col-md-6">
                                <label for="hireDate" class="form-label">Date of Hire</label>
                                <input type="date" class="form-control" id="hireDate" name="dateOfHire" required>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" form="addFacultyForm" class="btn btn-primary">Save</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Faculty Modal -->
    <div class="modal fade" id="editFacultyModal" tabindex="-1" aria-labelledby="editFacultyModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Edit Faculty</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="editFacultyForm">
                        <input type="hidden" id="editFacultyId" name="id">
                        <div class="row mb-3">
                            <div class="col-md-4">
                                <label for="editFacultyName" class="form-label">Faculty Name</label>
                                <input type="text" class="form-control" id="editFacultyName" name="facultyName" required>
                            </div>
                            <div class="col-md-4">
                                <label for="editEmail" class="form-label">Email</label>
                                <input type="email" class="form-control" id="editEmail" name="email" required>
                            </div>
                            <div class="col-md-4">
                                <label for="editContactNumber" class="form-label">Contact Number</label>
                                <input type="tel" class="form-control" id="editContactNumber" name="contactNumber" required>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-3">
                                <label for="editStatus" class="form-label">Status</label>
                                <select class="form-select" id="editStatus" name="status" required>
                                    <option value="Active">Active</option>
                                    <option value="Inactive">Inactive</option>
                                </select>
                            </div>
                            <div class="col-md-3">
                                <label for="editDob" class="form-label">Date of Birth</label>
                                <input type="date" class="form-control" id="editDob" name="dateOfBirth" required>
                            </div>
                            <div class="col-md-3">
                                <label for="editGender" class="form-label">Gender</label>
                                <select class="form-select" id="editGender" name="gender" required>
                                    <option value="Male">Male</option>
                                    <option value="Female">Female</option>
                                </select>
                            </div>
                            <div class="col-md-3">
                                <label for="editPosition" class="form-label">Position</label>
                                <input type="text" class="form-control" id="editPosition" name="position" required>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="editAddress" class="form-label">Address</label>
                                <input type="text" class="form-control" id="editAddress" name="address" required>
                            </div>
                            <div class="col-md-6">
                                <label for="editHireDate" class="form-label">Date of Hire</label>
                                <input type="date" class="form-control" id="editHireDate" name="dateOfHire" required>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" form="editFacultyForm" class="btn btn-primary">Save changes</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Delete Faculty Modal -->
    <div class="modal fade" id="deleteFacultyModal" tabindex="-1" aria-labelledby="deleteFacultyModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Delete Faculty</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete <strong class="faculty-name"></strong> from the faculty list?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" onclick="confirmDelete()">Delete</button>
                </div>
            </div>
        </div>
    </div>
      

    <!-- JavaScript for handling dropdown -->
    <script>
        // Function to select/deselect all checkboxes
        function selectAllCheckboxes(source) {
            const checkboxes = document.querySelectorAll('.studentCheckbox');
            checkboxes.forEach(checkbox => checkbox.checked = source.checked);
        }

         const deleteBtn = document.getElementById('deleteBtn');
         if (deleteBtn) {
            deleteBtn.addEventListener('click', function(event) {
                event.stopPropagation(); // Prevent row click from being triggered
            });
        }

                document.addEventListener('DOMContentLoaded', function() {
            // Load faculty data immediately when page loads
            loadFacultyData();

            // Handle Add Faculty form submission
            const addFacultyForm = document.getElementById('addFacultyForm');
            addFacultyForm.addEventListener('submit', async (e) => {
                e.preventDefault();
                const formData = new FormData(addFacultyForm);
                const jsonData = {};

                formData.forEach((value, key) => {
                    if (key === 'dateOfBirth' || key === 'dateOfHire') {
                        jsonData[key] = new Date(value).toISOString();
                    } else {
                        jsonData[key] = value;
                    }
                });

                try {
                    const response = await fetch('/api/Faculty', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(jsonData)
                    });

                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }

                    const result = await response.json();
                    alert('Faculty member added successfully!');

                    // Close modal and reset form
                    const modal = bootstrap.Modal.getInstance(document.getElementById('addFacultyModal'));
                    modal.hide();
                    addFacultyForm.reset();

                    // Refresh the table
                    await loadFacultyData();
                } catch (error) {
                    console.error('Error:', error);
                    alert('Failed to add faculty member: ' + error.message);
                }
            });

            // Handle Edit Faculty form submission
            const editFacultyForm = document.getElementById('editFacultyForm');
            editFacultyForm.addEventListener('submit', async (e) => {
                e.preventDefault();
                const formData = new FormData(editFacultyForm);
                const facultyId = document.getElementById('editFacultyId').value;

                const updatedFaculty = {
                    id: parseInt(facultyId),
                    facultyName: formData.get('facultyName'),
                    email: formData.get('email'),
                    contactNumber: formData.get('contactNumber'),
                    status: formData.get('status'),
                    dateOfBirth: new Date(formData.get('dateOfBirth')).toISOString(),
                    gender: formData.get('gender'),
                    position: formData.get('position'),
                    address: formData.get('address'),
                    dateOfHire: new Date(formData.get('dateOfHire')).toISOString()
                };

                try {
                    console.log('Sending updated faculty:', updatedFaculty); // Debug log
                    const response = await fetch(`/api/Faculty/${facultyId}`, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(updatedFaculty)
                    });

                    if (!response.ok) {
                        const errorData = await response.json();
                        throw new Error(errorData.message || `HTTP error! status: ${response.status}`);
                    }

                    alert('Faculty member updated successfully!');
                    const modal = bootstrap.Modal.getInstance(document.getElementById('editFacultyModal'));
                    modal.hide();
                    await loadFacultyData();
                } catch (error) {
                    console.error('Error:', error);
                    alert('Failed to update faculty member: ' + error.message);
                }
            });
        });

        // Function to load and display faculty data
        async function loadFacultyData() {
            try {
                const response = await fetch('/api/Faculty');
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                const faculties = await response.json();

                const tableBody = document.querySelector('tbody');
                tableBody.innerHTML = '';

                faculties.forEach(faculty => {
                    const row = `
                        <tr>
                            <td>${faculty.facultyName}</td>
                            <td>${faculty.position}</td>
                            <td>${faculty.status}</td>
                            <td>
                                <div class="dropdown">
                                    <button class="btn btn-link p-0" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                        <i class="fas fa-ellipsis" style="margin-left: 20px;"></i>
                                    </button>
                                    <ul class="dropdown-menu">
                                        <li><a class="dropdown-item btn-outline-info fw-bold" onclick="editFaculty(${faculty.id})">Edit</a></li>
                                        <li><a class="dropdown-item btn-outline-danger fw-bold" onclick="deleteFaculty(${faculty.id}, '${faculty.facultyName}')">Delete</a></li>
                                    </ul>
                                </div>
                            </td>
                        </tr>
                    `;
                    tableBody.insertAdjacentHTML('beforeend', row);
                });
            } catch (error) {
                console.error('Error loading faculty data:', error);
                alert('Error loading faculty data. Please try again.');
            }
        }

        // Function to handle editing faculty
        async function editFaculty(id) {
            try {
                const response = await fetch(`/api/Faculty/${id}`);
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                const faculty = await response.json();

                // Store the faculty ID
                document.getElementById('editFacultyId').value = faculty.id;

                // Populate form fields
                document.getElementById('editFacultyName').value = faculty.facultyName;
                document.getElementById('editEmail').value = faculty.email;
                document.getElementById('editContactNumber').value = faculty.contactNumber;
                document.getElementById('editStatus').value = faculty.status;
                document.getElementById('editDob').value = faculty.dateOfBirth.split('T')[0];
                document.getElementById('editGender').value = faculty.gender;
                document.getElementById('editPosition').value = faculty.position;
                document.getElementById('editAddress').value = faculty.address;
                document.getElementById('editHireDate').value = faculty.dateOfHire.split('T')[0];

                // Show the modal
                const editModal = new bootstrap.Modal(document.getElementById('editFacultyModal'));
                editModal.show();
            } catch (error) {
                console.error('Error fetching faculty details:', error);
                alert('Error loading faculty details. Please try again.');
            }
        }

        // Function to handle deleting faculty
        async function deleteFaculty(id, facultyName) {
            try {
                const confirmed = confirm(`Are you sure you want to delete ${facultyName}?`);
                if (!confirmed) return;

                const response = await fetch(`/api/Faculty/${id}`, {
                    method: 'DELETE'
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                alert('Faculty member deleted successfully!');
                await loadFacultyData();
            } catch (error) {
                console.error('Error:', error);
                alert('Failed to delete faculty member: ' + error.message);
            }
        }
    </script>
</body>

